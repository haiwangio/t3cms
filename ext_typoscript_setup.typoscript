lib.md5 = TEXT
lib.md5 {
    stdWrap.hash = md5
    current = 1
}

# Module configuration
module.tx_t3cms {
    # settings < plugin.tx_t3cms.settings
    # persistence < plugin.tx_t3cms.persistence
    # view < plugin.tx_t3cms.view
    view {
        templateRootPaths.10 = EXT:t3cms/Resources/Private/Skins/AdminBSBMaterialDesign/Templates/
        partialRootPaths.10 = EXT:t3cms/Resources/Private/Skins/AdminBSBMaterialDesign/Partials/
        layoutRootPaths.10 = EXT:t3cms/Resources/Private/Skins/AdminBSBMaterialDesign/Layouts/
    }
}

# Get typoscript navigations as HTML options
    t3cmspageutilnavigations = PAGE
    t3cmspageutilnavigations {
        typeNum = 123456
        10 = USER
        10 {
            userFunc = TYPO3\CMS\Extbase\Core\Bootstrap->run
            extensionName = T3cms
            controller = Worker
            pluginName = T3cms
            vendorName = SalvatoreEckel
            switchableControllerActions.Worker.1 = tsnavigations
        }
        config {
            disableAllHeaderCode = 1
            xhtml_cleaning = 0
            no_cache = 1
            debug = 0
        }
    }

# Get typoscript sidebars as HTML options
    t3cmspageutilsidebars < t3cmspageutilnavigations
    t3cmspageutilsidebars.typeNum = 123457
    t3cmspageutilsidebars.10.switchableControllerActions.Worker.1 = tssidebars

# Dynamic Content
    lib.dynamicContent = COA
    lib.dynamicContent {
        5 = LOAD_REGISTER
        5 {
            colPos.cObject = TEXT
            colPos.cObject {
                field = colPos
                ifEmpty.cObject = TEXT
                ifEmpty.cObject {
                    value.current = 1
                    ifEmpty = 0
                }
            }
            pageUid.cObject = TEXT
            pageUid.cObject {
                field = pageUid
                ifEmpty.data = TSFE:id
            }
            contentFromPid.cObject = TEXT
            contentFromPid.cObject {
                data = DB:pages:{register:pageUid}:content_from_pid
                data.insertData = 1
            }
            wrap.cObject = TEXT
            wrap.cObject {
                field = wrap
            }
        }
        20 = CONTENT
        20 {
            table = tt_content
            select {
                includeRecordsWithoutDefaultTranslation = 1
                orderBy = sorting
                where = colPos={register:colPos}
                where.insertData = 1
                pidInList.data = register:pageUid
                pidInList.override.data = register:contentFromPid
            }
            stdWrap {
                dataWrap = {register:wrap}
                required = 1
            }
        }
        90 = RESTORE_REGISTER
    }
    lib.dynamicContentSlide =< lib.dynamicContent
    lib.dynamicContentSlide.20.slide = -1

# 
tt_content {
  stdWrap.outerWrap.cObject = CASE
  stdWrap.outerWrap.cObject {
    key.field = layout

    default = TEXT
    default.value = |
    40 = TEXT
    40.value = <div class="container">|</div>
    41 = TEXT
    41.value = <div class="container-fluid">|</div>
  }
}